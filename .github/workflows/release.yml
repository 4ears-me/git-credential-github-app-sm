name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: codebuild-4ears-me-${{ github.run_id }}-${{ github.run_attempt }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch package info
        uses: andrewslotin/go-proxy-pull-action@v1.3.0

  docker:
    runs-on:
      - codebuild-4ears-me-${{ github.run_id }}-${{ github.run_attempt }}
      - image:${{ matrix.version }}
      - size:${{ matrix.size }}

    strategy:
      matrix:
        include:
          - arch: arm64
            version: arm-3.0
            size: small
          - arch: amd64
            version: linux-5.0
            size: small

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS assume
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::374142386962:role/github-credential-provider-publish

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Build, tag, and push docker image to Amazon ECR Public
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: y1c6o4t8
          REPOSITORY: git-credential-github-app-sm
          IMAGE_TAG: ${{ github.ref_name }}-${{ matrix.arch }}
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

  docker-manifest:
    runs-on: codebuild-4ears-me-${{ github.run_id }}-${{ github.run_attempt }}
    needs:
      - docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: AWS assume
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::374142386962:role/github-credential-provider-publish

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Push manifest
        env:
          REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
          REGISTRY_ALIAS: y1c6o4t8
          REPOSITORY: git-credential-github-app-sm
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker manifest create $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG-amd64 $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG-arm64
          docker manifest push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG